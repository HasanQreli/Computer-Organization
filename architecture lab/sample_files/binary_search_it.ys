# NAME SURNAME ID
# Hasan KÃ¼reli 2580751

.pos 0x0
init:
    irmovq stack, %rsp
    irmovq $6, %rdx
    irmovq array_begin, %rdi
    irmovq array_end, %rsi
    call binary_search
    halt

#implement your code below (DO NOT CHANGE/REMOVE THIS COMMENT)

binary_search:
	rrmovq %rdi, %rbx		# rbx = initial_begin
	
Loop:
	rrmovq %rdi, %r9
	rrmovq %rsi, %r8
	subq %rdi, %r8			# r8 = (end-begin)
	jle Return				# jump to return if (end<=begin) 
	irmovq $16, %r10
	dvvq %r10, %r8
	irmovq $8, %r10
	mllq %r10, %r8
	addq %r8, %r9			# r9 = mid 
	mrmovq (%r9), %r10		# r10 = *mid
	subq %rdx, %r10
	je Equal
	jl Less
	jg Greater
	jmp Loop
Greater:
	rrmovq %r9, %rsi
	jmp Loop
Less:
	irmovq $8, %r10	
	addq %r10, %r9
	rrmovq %r9, %rdi
	jmp Loop
		
Equal:
	rrmovq %r9, %rax
	irmovq $8, %r10
	addq %r10, %rax
	subq %rbx, %rax
	irmovq $8, %r10
	dvvq %r10, %rax
	jmp Done
Return:
	irmovq $-1, %rax
Done:
    ret

#implement your code above (DO NOT CHANGE/REMOVE THIS COMMENT)

.pos 0x1008
array_begin:
    .quad 1
    .quad 2
    .quad 3
    .quad 5
    .quad 6
    .quad 7	
    .quad 9
    .quad 11
array_end:
    .quad 0
.pos 0x1F00
stack:
    .quad 0


