# NAME SURNAME ID
# Hasan KÃ¼reli 2580751

.pos 0x0
init:
    irmovq stack, %rsp
    irmovq $6, %rdx
    irmovq array_begin, %rdi
    irmovq array_end, %rsi
    call binary_search
    halt

#implement your code below (DO NOT CHANGE/REMOVE THIS COMMENT)

binary_search:
	pushq %rdi
	pushq %rsi
	rrmovq %rdi, %r9
	rrmovq %rsi, %r8
	subq %rdi, %r8			# r8 = (end-begin)
	jle Return				# jump to return if (end<=begin) 
	irmovq $16, %r10
	dvvq %r10, %r8
	irmovq $8, %r10
	mllq %r10, %r8
	addq %r8, %r9			# r9 = mid 
	pushq %r9
	mrmovq (%r9), %r10		# r10 = *mid
	subq %rdx, %r10
	je Equal
	jl Less
	jg Greater
Greater:
	rrmovq %r9, %rsi
	call binary_search
	popq %r13
	popq %r13
	popq %r13
	ret
Less:
	irmovq $8, %r10
	rrmovq %r10, %rdi
	addq %r9, %rdi 			# rdi is mid+1
	call binary_search
	popq %r9
	popq %rsi
	popq %rdi
	irmovq $-1, %r10
	rrmovq %rax, %r11
	subq %r10, %r11
	jne Lessnq
	ret
Lessnq:
	irmovq $8, %r10
	subq %rdi, %r9
	addq %r10, %r9
	irmovq $8, %r10
	dvvq %r10, %r9
	addq %r9, %rax
	ret
Equal:
	rrmovq %r9, %rax
	irmovq $8, %r10
	addq %r10, %rax
	subq %rdi, %rax
	irmovq $8, %r10
	dvvq %r10, %rax

	popq %r13
	popq %r13
	popq %r13
	ret
Return:
	popq %r13
	popq %r13
	irmovq $-1, %rax
    ret

#implement your code above (DO NOT CHANGE/REMOVE THIS COMMENT)

.pos 0x1008
array_begin:
    .quad 1
    .quad 2
    .quad 3
    .quad 5
    .quad 6
    .quad 7	
    .quad 9
    .quad 11
array_end:
    .quad 0
.pos 0x1F00
stack:
    .quad 0


